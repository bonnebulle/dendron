// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "alt+[Backquote]",
        "command": "editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+[Comma]",
        "command": "-editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+[Backquote]",
        "command": "problems.action.showQuickFixes",
        "when": "problemFocus"
    },
    {
        "key": "ctrl+shift+[Comma]",
        "command": "-problems.action.showQuickFixes",
        "when": "problemFocus"
    },
    {
        "key": "ctrl+l",
        "command": "-expandLineSelection",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.gotoLine"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
    },
    {
        "key": "ctrl+g",
        "command": "search.action.focusNextSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    {
        "key": "f4",
        "command": "-search.action.focusNextSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    {
        "key": "ctrl+shift+g",
        "command": "-workbench.view.scm"
    },
    {
        "key": "shift+f4",
        "command": "-search.action.focusPreviousSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    {
        "key": "pagedown",
        "command": "cursorBottom",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+end",
        "command": "-cursorBottom",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+right",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "ctrl+shift+alt+left",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "ctrl+pageup",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "ctrl+pageup",
        "command": "cursorTop",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+home",
        "command": "-cursorTop",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "ctrl+shift+a",
        "command": "windowSwitch.listOpenedFiles"
    },
    {
        "key": "alt+1",
        "command": "windowSwitch.switchToLastOpenedFile"
    },
    {
        "key": "ctrl+home",
        "command": "extension.extendedCursorMove.cursorHome"
    },
    {
        "key": "ctrl+end",
        "command": "extension.extendedCursorMove.cursorEnd"
    },
    {
        "key": "shift+end",
        "command": "-cursorEndSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+end",
        "command": "-cursorBottomSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+end",
        "command": "cursorLineEndSelect"
    },
    {
        "key": "ctrl+shift+home",
        "command": "-cursorTopSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+[BracketRight]",
        "command": "jumpToPrevSnippetPlaceholder",
        "when": "editorTextFocus && hasPrevTabstop && inSnippetMode"
    },
    {
        "key": "shift+tab",
        "command": "-jumpToPrevSnippetPlaceholder",
        "when": "editorTextFocus && hasPrevTabstop && inSnippetMode"
    },
    {
        "key": "ctrl+[BracketRight]",
        "command": "outdent",
        "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus"
    },
    {
        "key": "shift+tab",
        "command": "-outdent",
        "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus"
    },
    {
        "key": "ctrl+[BracketRight]",
        "command": "insertPrevSuggestion",
        "when": "hasOtherSuggestions && textInputFocus && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
    },
    {
        "key": "shift+tab",
        "command": "-insertPrevSuggestion",
        "when": "hasOtherSuggestions && textInputFocus && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
    },
    {
        "key": "ctrl+[BracketRight]",
        "command": "acceptAlternativeSelectedSuggestion",
        "when": "suggestWidgetVisible && textInputFocus && textInputFocus"
    },
    {
        "key": "shift+tab",
        "command": "-acceptAlternativeSelectedSuggestion",
        "when": "suggestWidgetVisible && textInputFocus && textInputFocus"
    },
    {
        "key": "ctrl+shift+t",
        "command": "-workbench.action.reopenClosedEditor"
    },
    {
        "key": "alt+1",
        "command": "-workbench.action.openEditorAtIndex1"
    },
    {
        "key": "ctrl+shift+f",
        "command": "-workbench.action.findInFiles"
    },
    {
        "key": "ctrl+shift+f",
        "command": "-workbench.view.search",
        "when": "workbench.view.search.active"
    },
    {
        "key": "ctrl+shift+f",
        "command": "-workbench.action.terminal.searchWorkspace",
        "when": "terminalFocus && terminalProcessSupported && terminalProcessSupported && terminalTextSelected"
    },
    {
        "key": "ctrl+shift+g",
        "command": "editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+h",
        "command": "-editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+m",
        "command": "-editor.action.toggleTabFocusMode"
    },
    {
        "key": "ctrl+shift+m",
        "command": "-editor.action.toggleTabFocusMode"
    },
    {
        "key": "ctrl+shift+l",
        "command": "dendron.lookup",
        "when": "dendron:pluginActive"
    },
    {
        "key": "ctrl+l",
        "command": "-dendron.lookup",
        "when": "dendron:pluginActive"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "f12",
        "command": "-editor.gotoNextSymbolFromResult",
        "when": "hasSymbols"
    },
    {
        "key": "f12",
        "command": "-goToNextReference",
        "when": "inReferenceSearchEditor || referenceSearchVisible"
    },
    {
        "key": "ctrl+shift+[BracketLeft]",
        "command": "dendron.reloadIndex"
    },
    {
        "key": "ctrl+alt+r",
        "command": "-revealFileInOS",
        "when": "!editorFocus"
    },
    {
        "key": "ctrl+shift+[Quote]",
        "command": "dendronTreeView.focus"
    },
    {
        "key": "ctrl+shift+m",
        "command": "dendronTreeView.focus"
    },
    {
        "key": "ctrl+shift+m",
        "command": "dendron.lookupSchema",
        "when": "dendron:pluginActive"
    },
    {
        "key": "ctrl+shift+l",
        "command": "-dendron.lookupSchema",
        "when": "dendron:pluginActive"
    },
    {
        "key": "ctrl+shift+[BracketRight]",
        "command": "dendron.sitePreview"
    },
    {
        "key": "ctrl+[Quote]",
        "command": "dendron.showPreview"
    },
    {
        "key": "ctrl+pageup ctrl+pageup",
        "command": "workbench.action.maximizeEditor"
    },
    {
        "key": "ctrl+pageup right",
        "command": "workbench.action.focusSideBar"
    },
    {
        "key": "ctrl+0",
        "command": "-workbench.action.focusSideBar"
    },
    {
        "key": "ctrl+shift+alt+up up",
        "command": "dendron.goUpHierarchy",
        "when": "dendron:pluginActive && editorFocus"
    },
    {
        "key": "ctrl+shift+up",
        "command": "-dendron.goUpHierarchy",
        "when": "dendron:pluginActive && editorFocus"
    },
    {
        "key": "ctrl+pageup ctrl+home",
        "command": "workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+k ctrl+left",
        "command": "-workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+shift+v",
        "command": "-markdown-preview-enhanced.openPreview",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+pageup down",
        "command": "markdown-preview-enhanced.openPreviewToTheSide",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+k v",
        "command": "-markdown-preview-enhanced.openPreviewToTheSide",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+pageup ctrl+pagedown",
        "command": "markdown-preview-enhanced.openPreview"
    },
    {
        "key": "ctrl+pageup ctrl+end",
        "command": "workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+k ctrl+right",
        "command": "-workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+pageup ctrl+home",
        "command": "workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "ctrl+1",
        "command": "-workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "ctrl+shift+alt+a",
        "command": "extension.vscode-git-automator.addAndCommitCurrentFile"
    },
    {
        "key": "ctrl+shift+z",
        "command": "-extension.vscode-git-automator.addAndCommitCurrentFile"
    },
    {
        "key": "ctrl+shift+c",
        "command": "-workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+shift+b",
        "command": "dendron.siteBuild"
    },
    {
        "key": "ctrl+shift+up ctrl+shift+right",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+[BracketRight] ctrl+[BracketRight]",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.terminal.switchTerminal",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "dendron.gotoNote",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+enter",
        "command": "-dendron.gotoNote",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+k",
        "command": "dendron.renameNote"
    },
    {
        "key": "ctrl+shift+end",
        "command": "extension.extendedCursorMove.cursorEndSelect"
    },
    {
        "key": "ctrl+shift+home",
        "command": "extension.extendedCursorMove.cursorHomeSelect"
    },
    {
        "key": "ctrl+shift+alt+down",
        "command": "dendron.goDownHierarchy",
        "when": "dendron:pluginActive && editorFocus"
    },
    {
        "key": "ctrl+shift+down",
        "command": "-dendron.goDownHierarchy",
        "when": "dendron:pluginActive && editorFocus"
    },
    {
        "key": "ctrl+shift+alt+up",
        "command": "-editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+alt+down",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+up",
        "command": "editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+up",
        "command": "-editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+enter",
        "command": "-markdown-preview-enhanced.runCodeChunk",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "-notebook.cell.insertCodeCellAbove",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "key": "shift+enter",
        "command": "editor.action.previousMatchFindAction",
        "when": "editorFocus && findInputFocussed"
    },
    {
        "key": "shift+enter",
        "command": "-editor.action.previousMatchFindAction",
        "when": "editorFocus && findInputFocussed"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "dendron.openLink"
    },
    {
        "key": "end",
        "command": "-filebunny.goToBottomActiveFile",
        "when": "editorFocus && !editorReadonly"
    },
    {
        "key": "home",
        "command": "-filebunny.goToTopActiveFile",
        "when": "editorFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+alt+enter",
        "command": "editor.action.revealDefinition"
    },
    {
        "key": "al+shift+n",
        "command": "vscodeMarkdownNotes.newNote",
    },
    {
        "key": "ctrl+shift+i",
        "command": "-dendron.createDailyJournalNote",
        "when": "dendron:pluginActive"
    },
    {
        "key": "ctrl+l ctrl+l",
        "command": "dendron.goNextHierarchy"
    },
    {
        "key": "ctrl+alt+l ctrl+alt+l",
        "command": "dendron.goPrevHierarchy"
    },
    {
        "key": "ctrl+shift+x",
        "command": "dendron.addAndCommit"
    },
    {
        "key": "ctrl+shift+x",
        "command": "-workbench.view.extensions",
        "when": "viewContainer.workbench.view.extensions.enabled"
    },
    {
        "key": "ctrl+meta+l ctrl+meta+l",
        "command": "dendron.treeView.focus"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.showAllEditorsByMostRecentlyUsed"
    }
]